name: Build and release Tauri desktop app

on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest" # for ARM
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for x86
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""
          - platform: "windows-latest"
            args: "aarch64-pc-windows-msvc"

    runs-on: ${{ matrix.settings.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: frontend
          sparse-checkout-cone-mode: false

      - name: Move frontend files to root (Windows)
        if: matrix.settings.platform == 'windows-latest'
        run: |
          Get-ChildItem -Force -File | Format-List
          Move-Item -Path 'frontend\*' -Destination .
          Remove-Item -Recurse -Force -Path 'frontend'
          Get-ChildItem -Force -File | Format-List

      - name: Move frontend files to root (Unix)
        if: matrix.settings.platform != 'windows-latest'
        run: |
          ls -lah
          shopt -s dotglob
          mv frontend/* .
          rm -rf frontend
          ls -lah

      - name: Install dependencies (Ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Add rustup target to resolve errors (Ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        run: rustup target add x86_64-pc-windows-msvc

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install site packages
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.settings.args }}

      # - name: Build app
      #   run: yarn run tauri build

      # - name: Debug target folder
      #   run: tree src-tauri/target

      # - name: Save package
      #   uses: actions/upload-artifact@v4
      #   with:
      #     # Do not use wildcard because directory structure is preserved
      #     if-no-files-found: warn
      #     path: |
      #       src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*
      #       src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*

  # release:
  #   runs-on: ubuntu-latest
  #   needs: [build]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get all build outputs
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: outputs

  #     - name: Debug outputs folder
  #       run: tree outputs

  #     - name: Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         name: OpenSMS
  #         body_path: CHANGELOG.txt
  #         repository: dhzdhd/OpenSMS
  #         prerelease: true
  #         generate_release_notes: true
  #         files: outputs/*
  #         token: ${{ secrets.GITHUB_TOKEN }}
