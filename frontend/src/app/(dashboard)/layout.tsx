"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "../globals.css";
import { ThemeProvider } from "@/components/ThemeProvider";
import { ThemeToggle } from "@/components/ThemeToggle";
import { AuthProvider, useAuth } from "@/components/AuthProvider";
import Template from "./template";

const inter = Inter({ subsets: ["latin"] });

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const state = useAuth();

  return (
    <html lang="en">
      <body className={inter.className}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <header className="h-16 absolute w-full flex justify-end p-4">
            <ThemeToggle />
          </header>
          {/* TODO: Template is probably the solution for auth although AuthProvider creates a new reducer every time its instantiated and hence causes problems */}
          {/* Instead, create a wrapper around the provider and provide the wrapper only to both layouts */}
          <AuthProvider>
            <Template key="dashboard">{children}</Template>
          </AuthProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
